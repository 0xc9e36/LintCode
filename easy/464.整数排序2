public class Solution {
    /*
     * @param A: an integer array
     * @return: 
     */
    public void sortIntegers2(int[] A) {
        // write your code here
        quickSort(A, 0, A.length - 1);
    }
    
    public void quickSort(int[] A, int l, int r) {
        if(l >= r) {
            return ;
        }
        int j = partation(A, l, r);
        quickSort(A, l, j - 1);
        quickSort(A, j + 1, r);
    }
    
    public int partation(int[] A, int l, int r) {
        int v = A[l], i = l, j = r + 1;
        while(true) {
            while(A[++i] < v) {
                if(i == r) {
                    break;
                }
            }
            while(A[--j] > v) {
                if(j == l) {
                    break;
                }
            }
            if(i >= j) {
                break;
            }
            change(A, i, j);
        }
        change(A, l, j);
        return j;
    }
    
    public void change(int[] A, int i, int j) {
        int temp = A[i];
        A[i] = A[j];
        A[j] = temp;
    }
    
}
